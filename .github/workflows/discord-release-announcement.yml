name: Discord announcement on release

on:
  release:
    types: [published]

jobs:
  discord_announcement:
    runs-on: ubuntu-latest

    steps:
      - name: Send Discord notification as plain message
        shell: bash
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_ANNOUNCEMENTS_WEBHOOK_URL }}
          RELEASE_NAME: ${{ github.event.release.name }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          RELEASE_URL: ${{ github.event.release.html_url }}
          RELEASE_BODY: ${{ github.event.release.body }}
        run: |
          MESSAGE=$( 
            echo "# New MicroPython WalterModem release: $RELEASE_NAME"
            echo "- **TAG:** $RELEASE_TAG"
            echo "- **URL:** $RELEASE_URL"
            echo ""
            echo "---"
            echo "$RELEASE_BODY"
          )

          # Discord content length limit
          MAX_LEN=2000

          send_message() {
            MSG="$1"
            PAYLOAD=$(jq -n --arg content "$MSG" '{content: $content}')
            curl -H "Content-Type: application/json" -X POST -d "$PAYLOAD" "$WEBHOOK_URL"
          }

          split_and_send() {
            local remaining="$1"

            while [ ${#remaining} -gt $MAX_LEN ]; do
              local chunk=${remaining:0:$MAX_LEN}
              local split_at=$(echo "$chunk" | awk '{
                pos = 0
                for (i = 1; i <= length($0); i++) {
                  if (substr($0, i, 1) == "\n") {
                    pos = i
                  }
                }
                print pos
              }')

              if [ "$split_at" -eq 0 ]; then
                split_at=$MAX_LEN
              fi

              local part="${remaining:0:$split_at}"
              send_message "$part"
              remaining="${remaining:$split_at}"
            done

            if [ -n "$remaining" ]; then
              send_message "$remaining"
            fi
          }

          split_and_send "$MESSAGE"
