name: Discord announcement on release

on:
  release:
    types: [published]

jobs:
  discord_announcement:
    runs-on: ubuntu-latest

    steps:
    - name: Send Discord notification as plain message
      env:
        WEBHOOK_URL: ${{ secrets.DISCORD_ANNOUNCEMENTS_WEBHOOK_URL }}
        RELEASE_NAME: ${{ github.event.release.name }}
        RELEASE_TAG: ${{ github.event.release.tag_name }}
        RELEASE_URL: ${{ github.event.release.html_url }}
        RELEASE_BODY: ${{ github.event.release.body }}
      run: |
        MESSAGE=$'# New WalterModem MicroPython release: '"$RELEASE_NAME"$'\nTag: '"$RELEASE_TAG"$'\nURL: '"$RELEASE_URL"$'\n\n'"$RELEASE_BODY"

        MAX_LEN=2000

        send_message() {
          PAYLOAD=$(jq -n --arg content "$1" '{content: $content}')
          curl -H "Content-Type: application/json" -X POST -d "$PAYLOAD" "$WEBHOOK_URL"
        }

        LEN=${#MESSAGE}
        if [ $LEN -le $MAX_LEN ]; then
          send_message "$MESSAGE"
        else
          START=0
          while [ $START -lt $LEN ]; do
            SUB=${MESSAGE:START:MAX_LEN}

            SPLIT_POS=$(echo "$SUB" | awk '
              {
                for(i=length($0); i>0; i--) {
                  c=substr($0,i,1);
                  if(c=="\n" || c==" ") {print i; exit}
                }
              }
            ')

            if [ -z "$SPLIT_POS" ] || [ "$SPLIT_POS" -eq 0 ]; then
              SPLIT_POS=$MAX_LEN
            fi

            PART=${MESSAGE:START:SPLIT_POS}

            send_message "$PART"
            START=$((START + SPLIT_POS))
          done
        fi
